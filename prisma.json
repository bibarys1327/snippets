{
	"Next 14 | Page component": {
		"prefix": "pc",
		"scope": "typescriptreact, javascriptreact",
		"body": [
		"npm install prisma --save-dev",
		"npx prisma init",
		"npx prisma migrate",
		"DATABASE_URL='postgresql://postgres:password@localhost:5432/next-pizza?schema=public'",
		"generator client {",
		"provider = 'prisma-client-js'",
		"}",
		"",
		"datasource db {",
		"provider = 'postgresql'",
		"url      = env('DATABASE_URL')",
		"}",
		],
		"description": "Next 14 | Page component"
	},
	"Next 14 | Route handler": {
		"prefix": "rh",
		"scope": "typescriptreact, javascriptreact",
		"description": "Next 14 | Route component",
		"body": [
			"type CategoryProducts = Category & {",
				"products: Array<Product & { items: ProductItem[] }>;",
			"};"
		]
	},
	"ngapit": {
    "prefix": "trh",
    "body": [
      "import { Cart, CartItem, Ingredient, Product, ProductItem } from '@prisma/client';",
"",
"export type CartItemDTO = CartItem & {",
  "productItem: ProductItem & {",
   "product: Product;",
 " };".
  "ingredients: Ingredient[];",
"};",
"export interface CartDTO extends Cart {",
 " items: CartItemDTO[];",
"}",
"",
"export interface CreateCartItemValues {",
  "productItemId: number;",
  "ingredients?: number[];",
"}"

    ],
    "description": "Typescript: Next.js API Route"
  },
	"Next 14 | Params": {
		"prefix": "pi",
		"scope": "typescriptreact, javascriptreact",
		"description": "Next 14 | Params ",
		"body": [
			"{ params: { ${1:id} } }: { params: { ${1:id}: ${2:string} } }"
		]
	},
	"Next 14 | Metadata": {
		"prefix": "md",
		"scope": "typescriptreact, javascriptreact",
		"description": "Next 14 | Metadata",
		"body": [
			"import type { Metadata } from 'next'",
			"",
			"export const metadata: Metadata = {",
			"\ttitle: '${1}',",
			"\tdescription: '${2}'",
			"}"
		]
	},
	"Next Image component defination": {
    "prefix": "nui",
		"scope": "typescriptreact, javascriptreact",
    "body": ["<Image src='${1:path}' width={${2:20px}} height={${3:20px}} alt='' />"],
    "description": "nextjs usage of Image Component"
  },
	"Next use link": {
    "prefix": "nul",
		"scope": "typescriptreact, javascriptreact",
    "body": ["<Link href='${1:path}'>${2:link}</Link>"],
    "description": "Nextjs use link element"
  },
	"clsx or cn": {
		"scope": "javascript, javascriptreact, typescriptreact, typescript",
		"prefix": "cn",
		"body": ["className={cn(className, 'flex flex-1')}"],
		"description": "create a cn "
	},
}